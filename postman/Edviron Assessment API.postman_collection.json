{
	"info": {
		"_postman_id": "8e019aa1-db5b-47b2-9c5f-da9c33086357",
		"name": "Edviron Assessment API",
		"description": "Complete API collection for Edviron Assessment application with authentication and payment management",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29592058"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"admin_user\",\n  \"email\": \"admin@edviron.com\",\n  \"password\": \"password123\",\n  \"role\": \"admin\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						},
						"description": "Register a new user with username, email, password and role"
					},
					"response": []
				},
				{
					"name": "Register Trustee",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"trustee_user\",\n  \"email\": \"trustee@school.edu\",\n  \"password\": \"password123\",\n  \"role\": \"trustee\",\n  \"trustee_id\": \"65b0e552dd31950a9b41c5ba\",\n  \"school_id\": \"65b0e6293e9f76a9694d84b4\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						},
						"description": "Register a trustee user with trustee_id and school_id"
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const responseJson = pm.response.json();",
									"    pm.environment.set(\"authToken\", responseJson.token);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \n  \"email\": \"admin@edviron.com\",\n  \"password\": \"password123\"\n \n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						},
						"description": "Login user and get JWT token"
					},
					"response": []
				},
				{
					"name": "Get Current User",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/auth/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"me"
							]
						},
						"description": "Get current authenticated user details"
					},
					"response": []
				},
				{
					"name": "Update User Profile",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"updated_username\",\n  \"email\": \"updated@edviron.com\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/updateMe",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"updateMe"
							]
						},
						"description": "Update current user profile information"
					},
					"response": []
				},
				{
					"name": "Update Password",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"passwordCurrent\": \"password123\",\n  \"password\": \"newpassword123\",\n  \"passwordConfirm\": \"newpassword123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/updatePassword",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"updatePassword"
							]
						},
						"description": "Update user password"
					},
					"response": []
				},
				{
					"name": "Get All Users (Admin)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/auth/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"users"
							]
						},
						"description": "Get all users (Admin only)"
					},
					"response": []
				},
				{
					"name": "Get User by ID (Admin)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/auth/users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"users",
								"{{userId}}"
							]
						},
						"description": "Get specific user by ID (Admin only)"
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/auth/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"logout"
							]
						},
						"description": "Logout current user"
					},
					"response": []
				},
				{
					"name": "Delete Account",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/auth/deleteMe",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"deleteMe"
							]
						},
						"description": "Deactivate current user account"
					},
					"response": []
				},
				{
					"name": "Auth Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/auth/health",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"health"
							]
						},
						"description": "Check authentication service health"
					},
					"response": []
				}
			],
			"description": "Authentication endpoints for user management and JWT authentication"
		},
		{
			"name": "Payments",
			"item": [
				{
					"name": "Create Payment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const responseJson = pm.response.json();",
									"    pm.environment.set(\"orderId\", responseJson.data.order_id);",
									"    pm.environment.set(\"collectRequestId\", responseJson.data.collect_request_id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"amount\": \"1500\",\n  \"callback_url\": \"https://yourapp.com/payment-success\",\n  \"student_info\": {\n    \"name\": \"John Doe\",\n    \"id\": \"STU001\",\n    \"email\": \"john.doe@email.com\"\n  },\n  \"gateway_name\": \"razorpay\",\n  \"trustee_id\": \"65b0e552dd31950a9b41c5ba\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/payments/create-payment",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"payments",
								"create-payment"
							]
						},
						"description": "Create a new payment request and get payment URL for redirect"
					},
					"response": []
				},
				{
					"name": "Check Payment Status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/payments/status/{{collectRequestId}}?order_id={{orderId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"payments",
								"status",
								"{{collectRequestId}}"
							],
							"query": [
								{
									"key": "order_id",
									"value": "{{orderId}}"
								}
							]
						},
						"description": "Check payment status using collect request ID"
					},
					"response": []
				},
				{
					"name": "Get All Transactions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/payments/transactions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"payments",
								"transactions"
							]
						},
						"description": "Fetch all transactions using MongoDB aggregation"
					},
					"response": []
				},
				{
					"name": "Get Transactions by School",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/payments/transactions/school/{{schoolId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"payments",
								"transactions",
								"school",
								"{{schoolId}}"
							]
						},
						"description": "Get all transactions for a specific school"
					},
					"response": []
				},
				{
					"name": "Get Transaction Status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/payments/transaction-status/{{orderId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"payments",
								"transaction-status",
								"{{orderId}}"
							]
						},
						"description": "Check transaction status by custom order ID"
					},
					"response": []
				},
				{
					"name": "Payment Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/payments/health",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"payments",
								"health"
							]
						},
						"description": "Check payment service health and configuration"
					},
					"response": []
				}
			],
			"description": "Payment management endpoints for creating and tracking payments"
		},
		{
			"name": "System",
			"item": [
				{
					"name": "API Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/health",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"health"
							]
						},
						"description": "Check API health and database connection status"
					},
					"response": []
				},
				{
					"name": "Server Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/health",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"health"
							]
						},
						"description": "Check overall server health including uptime and memory usage"
					},
					"response": []
				},
				{
					"name": "Test Endpoint",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/test",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"test"
							]
						},
						"description": "Test endpoint to verify async handling and logging"
					},
					"response": []
				},
				{
					"name": "Error Test",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/error",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"error"
							]
						},
						"description": "Test endpoint to verify error handling middleware"
					},
					"response": []
				}
			],
			"description": "System health and testing endpoints"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:4000",
			"type": "string"
		},
		{
			"key": "authToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "orderId",
			"value": "",
			"type": "string"
		},
		{
			"key": "collectRequestId",
			"value": "",
			"type": "string"
		},
		{
			"key": "userId",
			"value": "",
			"type": "string"
		},
		{
			"key": "schoolId",
			"value": "65b0e6293e9f76a9694d84b4",
			"type": "string"
		}
	]
}